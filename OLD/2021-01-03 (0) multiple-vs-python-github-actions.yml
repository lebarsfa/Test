#on: [push, pull_request]
on: 
    push:
        branches: '**'
        tags: '' # Restrict to blank tags
    pull_request:
jobs:
 # This job can be removed if a new release should not be created...
# deploy:
#    runs-on: ubuntu-latest
#    steps: 
#    - uses: actions/create-release@v1
#      id: create_release
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        draft: true
#        tag_name: autotagname
#        release_name: autotagname
 matrix:
    runs-on: ${{ matrix.cfg.os }}
    defaults:
        run:
            shell: ${{ matrix.cfg.shell }}
    strategy:
        matrix:
            cfg:
            - { os: windows-2019, shell: cmd, arch: x86, runtime: vc14, cmake_params: '-G "Visual Studio 14" -A Win32', choco_vs_tools: 'vcbuildtools', cpcfg: '-win32', py_v_maj: 3, py_v_min: 4 }
            - { os: windows-2019, shell: cmd, arch: x64, runtime: vc16, cmake_params: '-G "Visual Studio 16" -A x64', cpcfg: '-win_amd64', py_v_maj: 3, py_v_min: 9 }
    steps: 
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.cfg.py_v_maj }}.${{ matrix.cfg.py_v_min }}
        architecture: ${{ matrix.cfg.arch }}
    - run: |
        python -c "import sys; print(sys.version)"
        echo ${{ matrix.cfg.py_v_maj }}.${{ matrix.cfg.py_v_min }}
    - run: choco install -y -r --no-progress vcbuildtools -ia "/InstallSelectableItems Win81SDK_CppBuildSKUV1;VisualCppBuildTools_ATLMFC_SDK" winflexbison
      if: matrix.cfg.choco_vs_tools=='vcbuildtools'
    - run: choco install -y -r --no-progress ${{ matrix.cfg.choco_vs_tools }} winflexbison
      if: matrix.cfg.choco_vs_tools!='vcbuildtools'
    - run: choco install -y -r --no-progress doxygen.install graphviz & python -m pip install --upgrade pip==19.1.1 & pip install --upgrade pyIbex & pip install --upgrade wheel setuptools & refreshenv.cmd
      if: matrix.cfg.py_v_maj=='3' && matrix.cfg.py_v_min=='4'
    - run: choco install -y -r --no-progress doxygen.install graphviz & python -m pip install --upgrade pip & pip install --upgrade pyIbex & pip install --upgrade wheel setuptools & git clone -b v3.1.1 https://github.com/sphinx-doc/sphinx & cd sphinx & pip install . & pip install --upgrade breathe sphinx-issues sphinx-tabs sphinx_rtd_theme & refreshenv.cmd
      if: matrix.cfg.py_v_maj!='3' || matrix.cfg.py_v_min!='4'
    - run: |
        cmake ${{ matrix.cfg.cmake_params }} .
        cmake --build .
